Maybe manage RigidBodyRef in HOC and provide a position function that tries rigid then mesh
Use React's useMemo and useCallback to memoize complex calculations and functions that don't need to be re-created on every render.
Bottom down and top up should be connected on id using DynamicDoubleArrow with offset
Move to using Motion for Canvas and Camera control ?
WDS_SOCKET_PORT=0 only in CodeSpace ?
The AnimationMixer in Three.js provides a robust and flexible way to handle animations
Entity-Component-System (ECS) is an architectural pattern often used in game development but increasingly in other types of applications, including simulations and virtual reality.

We are likely to hit performance issues so moving to 2D may be better e.g. pixi.js with planck-js This leaves an issue regarding how to have intersecting planes. plank-js seemed to run into issues with 1000s of objects. https://github.com/liabru/matter-js might be better ? https://github.com/liabru/matter-attractors

An example of calling a Physics function:
[1, 'emergent1.Sphere1', { action: { name: 'applyImpulse', params: [{ x: 10, y: 5, z: 0 }] } }],

Use a shader to make the particle look like a blob. 

Use a shader to allow for an a bloblike "ovverlay" of emergent entities

Draw relations within emergent entity - like a radial graph

Pass config into emergent entity e.g.
config = {
  entityCounts: [9,9,21],
  radius: 10
}
Pass down a ref to runtimeConfig ?

https://github.com/utsuboco/r3f-perf
